FROM ubuntu:22.04

ARG DEBIAN_FRONTEND=noninteractive

# TODO: should we include any drivers or anything here? The GL stuff that the
# sunshine container has, or the intel drivers, etc?  AMD drivers?

ENV \
    TZ="America/New York" \
    UNAME=retro \
    PUID=1000 \
    PGID=1000

# These depend on values defined in the previous set, so they (sadly) must be
# in their own layer.
ENV HOME=/home/$UNAME

# Set up the user
RUN --mount=type=bind,source=build/setup-retro-user,target=/setup-retro-user /setup-retro-user

ARG REQUIRED_PACKAGES="\
    x11-utils \
    sudo lsof pciutils \
    python3 \
    python3-numpy \
    python3-pip \
    python3-setuptools \
    avahi-utils \
    dbus-x11 \
    libxcomposite-dev \
    libxcursor1 \
    x11-xfs-utils \
    xfonts-base \
    xorg \
    software-properties-common\
    gpg-agent\
    "

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
    $REQUIRED_PACKAGES && \
    rm -rf /var/lib/apt/lists/*

COPY --chmod=777 scripts/wait-x11 /opt/gow/wait-x11

# Install mesa and vulkan requirements
RUN \
    echo "**** Update apt database ****" \
        && dpkg --add-architecture i386 \
        && add-apt-repository ppa:samoilov-lex/gamescope \
        && apt-get update \
    && \
    echo "**** Install mesa requirements ****" \
        && apt-get install -y --no-install-recommends \
            libgl1-mesa-dri \
            libgl1-mesa-glx \
            libgles2-mesa \
            libglu1-mesa \
            mesa-utils \
            mesa-utils-extra \
    && \
    echo "**** Install vulkan requirements ****" \
        && apt-get install -y --no-install-recommends \
            libvulkan1 \
            libvulkan1:i386 \
            mesa-vulkan-drivers \
            mesa-vulkan-drivers:i386 \
            vulkan-tools \
            gamescope \
    && \
    echo "**** Section cleanup ****" \
        && apt-get clean autoclean -y \
        && apt-get autoremove -y \
        && rm -rf \
            /var/lib/apt/lists/* \
            /var/tmp/* \
            /tmp/* \
    && \
    echo
    
# Install Steam
RUN \
    echo "**** Install steam ****" \
        && dpkg --add-architecture i386 \
        && apt-get update \
        && echo steam steam/question select "I AGREE" | debconf-set-selections \
        && echo steam steam/license note '' | debconf-set-selections \
        && apt-get install -y \
        && apt-get install -y \
            steam \
            steam-devices \
    && \
    echo "**** Section cleanup ****" \
        && apt-get clean autoclean -y \
        && apt-get autoremove -y \
        && rm -rf \
            /var/lib/apt/lists/* \
            /var/tmp/* \
            /tmp/* \
    && \
    echo
# In order to use Vulkan with NVIDIA GPUs, the ICD file must be present (so
# Vulkan knows how to find the driver libraries).  Although the nvidia runtime
# _does_ handle making the actual drivers available, it doesn't install the ICD
# JSON.  So we provide one ourselves.  This is harmless on non-NVIDIA systems,
# so we just do it unconditionally.
COPY configs/nvidia_icd.json /usr/share/vulkan/icd.d/nvidia_icd.json


COPY --chmod=777 scripts/bootstrap.sh /opt/gow/bootstrap.sh
COPY --chmod=777 scripts/ensure-groups /opt/gow/ensure-groups
COPY scripts/lib/ /opt/gow/bash-lib/

COPY --chmod=777 scripts/wait-x11 /opt/gow/wait-x11
COPY --chmod=777 scripts/startup.sh /opt/gow/startup.sh
COPY --chmod=777 scripts/startup-app.sh /opt/gow/startup-app.sh

USER "retro"

ENV XDG_RUNTIME_DIR=/tmp/.X11-unix


CMD [ "/opt/gow/bootstrap.sh" ]